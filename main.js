(()=>{"use strict";var t={56:(t,e,r)=>{t.exports=function(t){var e=r.nc;e&&t.setAttribute("nonce",e)}},72:t=>{var e=[];function r(t){for(var r=-1,s=0;s<e.length;s++)if(e[s].identifier===t){r=s;break}return r}function s(t,s){for(var n={},o=[],a=0;a<t.length;a++){var h=t[a],l=s.base?h[0]+s.base:h[0],c=n[l]||0,d="".concat(l," ").concat(c);n[l]=c+1;var p=r(d),u={css:h[1],media:h[2],sourceMap:h[3],supports:h[4],layer:h[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=i(u,s);s.byIndex=a,e.splice(a,0,{identifier:d,updater:m,references:1})}o.push(d)}return o}function i(t,e){var r=e.domAPI(e);return r.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;r.update(t=e)}else r.remove()}}t.exports=function(t,i){var n=s(t=t||[],i=i||{});return function(t){t=t||[];for(var o=0;o<n.length;o++){var a=r(n[o]);e[a].references--}for(var h=s(t,i),l=0;l<n.length;l++){var c=r(n[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}n=h}}},113:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},314:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var r="",s=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),s&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=t(e),s&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r}).join("")},e.i=function(t,r,s,i,n){"string"==typeof t&&(t=[[null,t,void 0]]);var o={};if(s)for(var a=0;a<this.length;a++){var h=this[a][0];null!=h&&(o[h]=!0)}for(var l=0;l<t.length;l++){var c=[].concat(t[l]);s&&o[c[0]]||(void 0!==n&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=n),r&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=r):c[2]=r),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),e.push(c))}},e}},365:(t,e,r)=>{r.d(e,{A:()=>a});var s=r(601),i=r.n(s),n=r(314),o=r.n(n)()(i());o.push([t.id,"* {\n    box-sizing: border-box;\n    font-family: 'Courier New', Courier, monospace;\n}\n\nbody {\n    background-color:lightgray;\n}\n\n#play-area {\n    display: grid;\n    grid-template-columns: 700px 600px;\n}\n\n.board {\n    height:400px;\n    width: 400px;\n    display: grid;\n    grid-template-columns: repeat(10, 40px);\n    grid-template-rows: repeat(10, 40px);\n}\n\n#ship-area {\n    height: 400px;\n    width: 200px;\n    text-align: center;\n}\n\n#ship-area div {\n    display: grid;\n    justify-content: center;\n}\n\n#player-area {\n    display: grid;\n    grid-template-columns: 415px 200px ;\n    justify-content: center;\n}\n\n.empty {\n    background-color: blue;\n}\n\n.miss {\n    background-color: lightblue;\n}\n\n.hit {\n    background-color: red;\n}\n\n.ship {\n    background-color: grey;\n}\n\n.selected {\n    background-color: green;\n}\n\n.board-space {\n    border: solid black 1px;\n    display: grid;\n    justify-content: center;\n    align-items: center;\n    font-size: 30px;\n}\n\n#ship-area button {\n    height: 25px;\n}\n\n#ship-area p {\n    margin-bottom: 3px;\n    margin-top: 10px;\n}\n\nh3 {\n    margin-bottom: 5px;\n}\n\nh1, #status {\n    margin-left: 30px;\n}\n\n.new-game {\n    margin-top: 20px;\n    margin-left: 20px;\n}",""]);const a=o},540:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},601:t=>{t.exports=function(t){return t[1]}},659:t=>{var e={};t.exports=function(t,r){var s=function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}e[t]=r}return e[t]}(t);if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(r)}},825:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(r){!function(t,e,r){var s="";r.supports&&(s+="@supports (".concat(r.supports,") {")),r.media&&(s+="@media ".concat(r.media," {"));var i=void 0!==r.layer;i&&(s+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),s+=r.css,i&&(s+="}"),r.media&&(s+="}"),r.supports&&(s+="}");var n=r.sourceMap;n&&"undefined"!=typeof btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(n))))," */")),e.styleTagTransform(s,t,e.options)}(e,t,r)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}}},e={};function r(s){var i=e[s];if(void 0!==i)return i.exports;var n=e[s]={id:s,exports:{}};return t[s](n,n.exports,r),n.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var s in e)r.o(e,s)&&!r.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.nc=void 0;var s=r(72),i=r.n(s),n=r(825),o=r.n(n),a=r(659),h=r.n(a),l=r(56),d=r.n(l),p=r(540),u=r.n(p),m=r(113),f=r.n(m),y=r(365),g={};g.styleTagTransform=f(),g.setAttributes=d(),g.insert=h().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=u(),i()(y.A,g),y.A&&y.A.locals&&y.A.locals;class S{constructor(t){if(t<1)throw new Error("Length must be positive.");this.length=t,this.hits=0,this.sunk=!1}hit(){if(this.hits===this.length)throw new Error("Ship already sunk");this.hits=this.hits+1,this.hits===this.length&&(this.sunk=!0)}isSunk(){return this.sunk}}class b{constructor(t,e){if(t<4||e<4)throw new Error("Board too small.");this.rows=t,this.cols=e,this.ships=[],this.shots=new Map,this.shipLocs=new Map}placeShip(t,e,r,s){const i=this.ships.length;if("right"==s){if(e+r-1>=this.cols)throw new Error("Ship out of bounds.");for(let s=e;s<e+r;s++){const e=this.#t(t,s);if(null!=this.shipLocs[e])throw new Error("Ship overlap.")}this.ships.push({ship:new S(r),row:t,col:e,orientation:s});for(let s=e;s<e+r;s++){const e=this.#t(t,s);this.shipLocs[e]=i}}else{if("down"!=s)throw new Error("Improper orientation.");if(t+r-1>=this.rows)throw new Error("Ship out of bounds.");for(let s=t;s<t+r;s++){const t=this.#t(s,e);if(null!=this.shipLocs[t])throw new Error("Ship overlap.")}this.ships.push({ship:new S(r),row:t,col:e,orientation:s});for(let s=t;s<t+r;s++){const t=this.#t(s,e);this.shipLocs[t]=i}}return!0}recieveAttack(t,e){if(t<0||t>=this.rows||e<0||e>=this.cols)throw new Error("Shot out of bounds.");const r=this.#t(t,e);if(null!=this.shots.get(r))throw new Error("Already shot here.");const s=this.shipLocs[r];return void 0===s?(this.shots.set(r,"miss"),!1):(this.shots.set(r,"hit"),this.ships[s].ship.hit(),!0)}allSunk(){for(const t of this.ships)if(!t.ship.isSunk())return!1;return!0}getSunkShips(){const t=[];for(const e of this.ships)e.ship.isSunk()&&t.push({length:e.ship.length,row:e.row,col:e.col,orientation:e.orientation});return t}getPlacedShips(){const t=[];for(const e of this.ships)t.push({length:e.ship.length,row:e.row,col:e.col,orientation:e.orientation});return t}getShots(){const t=[];for(const[e,r]of this.shots.entries()){const s=this.#e(e);s.push(r),t.push(s)}return t}#t(t,e){return String(t)+","+String(e)}#e(t){const e=[0,0],r=t.split(",");return e[0]=Number(r[0]),e[1]=Number(r[1]),e}}class w{constructor(t,e){if("human"===t)this.isCpu=!1;else{if("computer"!=t)throw new Error('Improper player type, must be either "human" or "computer"');this.isCpu=!0}this.board=new b(e,e),this.boardSize=e}generateAttack(){if(!this.isCpu)throw new Error("Human players should not generate attacks randomly");return[Math.floor(Math.random()*this.boardSize),Math.floor(Math.random()*this.boardSize)]}randomlyPlaceShip(t){if(!this.isCpu)throw new Error("Human players should not place ships randomly");let e=!1;for(;!e;)try{const r=Math.floor(Math.random()*this.boardSize),s=Math.floor(Math.random()*this.boardSize),i=0===Math.floor(2*Math.random())?"right":"down";this.board.placeShip(r,s,t,i),e=!0}catch(t){}}}class v{constructor(t){this.boardSize=t,this.#r()}#r(){document.getElementById("status-msg").innerHTML="Welcome to Battleship. Please place your ships. Use the toggle button to rotate your ship; the leftmost (horizontal) or topmost (vertical) part of the ship will be placed where you click."}drawShipArea(t,e,r,s,i){const n=["Carrier","Battleship","Destroyer","Submarine","Patrol Boat"],o=["5","4","3","3","2"],a=document.getElementById("ship-area");for(;a.firstChild;)a.removeChild(a.lastChild);const h=document.createElement("h3");h.textContent="Placement Menu:",a.appendChild(h);const l=document.createElement("p");l.textContent="Toggle Orientation:",a.appendChild(l);const c=document.createElement("button");c.textContent=i?"Placing Horizontally":"Placing Vertically",c.addEventListener("click",()=>{s()}),a.appendChild(c);for(let s=0;s<n.length;s++){const i=document.createElement("div"),h=document.createElement("p");if(h.textContent=n[s]+": "+o[s]+" tiles",i.appendChild(h),t[s].placed){const t=document.createElement("p");t.textContent="Ship already placed.",i.appendChild(t)}else if(e===s){const t=document.createElement("Button");t.classList.add("selected"),t.textContent="Unselect Ship",t.addEventListener("click",()=>{r(void 0)}),i.appendChild(t)}else{const t=document.createElement("Button");t.textContent="Select "+n[s],t.addEventListener("click",()=>{r(s)}),i.appendChild(t)}a.appendChild(i)}}drawPlayerBoard(t,e,r,s,i){const n=document.querySelector(".player-board");for(;n.firstChild;)n.removeChild(n.lastChild);const o=[];for(let t=0;t<this.boardSize;t++){o.push([]);for(let e=0;e<this.boardSize;e++)o[t].push("empty")}for(const t of e)if("right"==t.orientation)for(let e=t.col;e<t.col+t.length;e++)o[t.row][e]="ship";else for(let e=t.row;e<t.row+t.length;e++)o[e][t.col]="ship";for(const e of t)o[e[0]][e[1]]=e[2];for(let t=0;t<this.boardSize;t++)for(let e=0;e<this.boardSize;e++)if(r){const r=document.createElement("button");r.addEventListener("click",()=>{try{s(t,e)}catch(t){console.log(t.message)}}),r.classList.add(o[t][e]),r.classList.add("board-space"),n.appendChild(r)}else{const r=document.createElement("div");r.classList.add(o[t][e]),"hit"!==o[t][e]&&"miss"!==o[t][e]||(r.textContent="✕"),r.classList.add("board-space"),n.appendChild(r)}}drawComputerBoard(t,e,r){const s=document.querySelector(".cpu-board");for(;s.firstChild;)s.removeChild(s.lastChild);const i=[];for(let t=0;t<this.boardSize;t++){i.push([]);for(let e=0;e<this.boardSize;e++)i[t].push("empty")}for(const t of e)if("right"==t.orientation)for(let e=t.col;e<t.col+t.length;e++)i[t.row][e]="ship";else for(let e=t.row;e<t.row+t.length;c++)i[e][t.col]="ship";for(const e of t)i[e[0]][e[1]]=e[2];for(let t=0;t<this.boardSize;t++)for(let e=0;e<this.boardSize;e++){const n=document.createElement("button");n.addEventListener("click",()=>{r(t,e)}),n.classList.add(i[t][e]),n.classList.add("board-space"),"hit"!==i[t][e]&&"miss"!==i[t][e]||(n.textContent="✕"),s.appendChild(n)}}drawEndGame(t,e){document.getElementById("status-msg").innerHTML="human"===t?"Congratulations, you won! Click the button below if you'd like to play again.":"Unfortunately, you lost. Click the button below if you'd like to play again.";const r=document.getElementById("reset-area"),s=document.createElement("button");s.textContent="Start New Game",s.classList.add("new-game"),s.addEventListener("click",()=>{const t=document.getElementById("reset-area");for(;t.firstChild;)t.removeChild(t.lastChild);this.#r(),e()}),r.appendChild(s)}playerTurnStatus(){document.getElementById("status-msg").innerHTML="Your turn, please select a space on the enemy board to the right to fire a shot!"}cpuTurnStatus(){document.getElementById("status-msg").innerHTML="CPU turn, please wait while it selects its shot."}}console.log("hello world"),new class{#s=10;#i=[5,4,3,3,2];#n=500;constructor(t){this.randomPlacement=t,this.displayManager=new v(this.#s),this.#o()}#o(){if(this.players=[new w("human",this.#s),new w("computer",this.#s)],this.activePlayer=0,this.gamePhase=0,this.selectedShip=void 0,this.selectedOrientation=0,this.placementTracker=[],this.randomPlacement)for(const t of this.#i)this.players[1].randomlyPlaceShip(t),this.placementTracker.push({length:t,placed:!1});else for(let t=0;t<this.#i.length;t++)this.players[0].board.placeShip(t,t,this.#i[t],"right"),this.players[1].board.placeShip(t,t,this.#i[t],"right"),this.placementTracker.push({length:this.#i[t],placed:!0}),this.#a();this.displayManager.drawShipArea(this.placementTracker,this.selectedShip,this.selectShip.bind(this),this.rotateSelectedShip.bind(this),0===this.selectedOrientation),this.displayManager.drawPlayerBoard(this.players[0].board.getShots(),this.players[0].board.getPlacedShips(),!0,this.placeSelectedShip.bind(this))}selectShip(t){this.selectedOrientation=0,this.selectedShip=t,this.displayManager.drawShipArea(this.placementTracker,this.selectedShip,this.selectShip.bind(this),this.rotateSelectedShip.bind(this),0===this.selectedOrientation)}rotateSelectedShip(){this.selectedOrientation=(this.selectedOrientation+1)%2,this.displayManager.drawShipArea(this.placementTracker,this.selectedShip,this.selectShip.bind(this),this.rotateSelectedShip.bind(this),0===this.selectedOrientation)}placeSelectedShip(t,e){if(void 0===this.selectedShip)throw new Error("No ship selected to place.");if(this.placementTracker[this.selectedShip].placed)throw new Error("Unable to place already placed ship.");const r=this.placementTracker[this.selectedShip].length,s=0==this.selectedOrientation?"right":"down";try{this.players[0].board.placeShip(t,e,r,s),this.placementTracker[this.selectedShip].placed=!0,this.selectedShip=void 0,this.displayManager.drawShipArea(this.placementTracker,this.selectedShip,this.selectShip.bind(this),this.rotateSelectedShip.bind(this),0===this.selectedOrientation),this.displayManager.drawPlayerBoard(this.players[0].board.getShots(),this.players[0].board.getPlacedShips(),!0,this.placeSelectedShip.bind(this))}catch{}this.#h()&&this.#a()}#h(){return this.placementTracker.reduce((t,e)=>t&&e.placed,!0)}#a(){this.gamePhase=1,this.displayManager.playerTurnStatus(),this.displayManager.drawPlayerBoard(this.players[0].board.getShots(),this.players[0].board.getPlacedShips(),!1,()=>{}),this.displayManager.drawComputerBoard(this.players[1].board.getShots(),this.players[0].board.getSunkShips(),this.processPlayerShot.bind(this))}#l(){if(1!=this.gamePhase)throw new Error("Can only swap phases in phase 1, currently in "+String(this.gamePhase));this.activePlayer=(this.activePlayer+1)%2,1==this.activePlayer&&this.#c()}processPlayerShot(t,e){if(1==this.gamePhase)try{const r=this.players[1].board.recieveAttack(t,e);if(this.displayManager.drawComputerBoard(this.players[1].board.getShots(),this.players[0].board.getSunkShips(),this.processPlayerShot.bind(this)),r&&this.#d(1))return void this.#p(0);if(!r)return void this.#l()}catch{}else console.log("Cannot shoot when game is inactive.")}#c(){this.displayManager.cpuTurnStatus(),setTimeout(this.#u.bind(this),this.#n)}#u(){console.log(this.players);let t=!1,e=!0;for(;e;){const r=this.players[1].generateAttack();try{t=this.players[0].board.recieveAttack(r[0],r[1]),e=!1}catch{e=!0}}console.log(t),this.displayManager.drawPlayerBoard(this.players[0].board.getShots(),this.players[0].board.getPlacedShips(),!1,()=>{}),t&&this.#d(0)?this.#p(1):t?setTimeout(this.#u.bind(this),this.#n):this.#m()}#m(){this.displayManager.playerTurnStatus(),this.#l()}#d(t){return this.players[t].board.allSunk()}#p(t){this.gamePhase=2,this.displayManager.drawEndGame(0===t?"human":"computer",this.resetGame.bind(this))}resetGame(){this.#o()}}(!0)})();